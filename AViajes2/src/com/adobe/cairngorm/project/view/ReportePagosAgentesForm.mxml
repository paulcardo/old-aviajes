<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 title="Reporte Pago Agentes"
		 creationComplete="init()"
		 width="1014" height="610">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

	<fx:Script>
		<![CDATA[  
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import com.adobe.cairngorm.project.event.ReportePagosAgentesEvent;
			import com.adobe.cairngorm.project.model.ModelLocator;
			import com.adobe.cairngorm.project.model.ReportePagosAgentes;
			import com.adobe.cairngorm.project.utils.DataExporter;
			import com.adobe.cairngorm.project.vo.*;
			
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			import mx.events.DataGridEvent;
			import mx.formatters.NumberBaseRoundType;
			import mx.formatters.NumberFormatter;
			import mx.rpc.xml.SimpleXMLDecoder;
			import mx.utils.ObjectUtil;
			
			import org.alivepdf.colors.RGBColor;
			import org.alivepdf.data.Grid;
			import org.alivepdf.data.GridColumn;
			import org.alivepdf.display.Display;
			import org.alivepdf.fonts.CoreFont;
			import org.alivepdf.fonts.FontFamily;
			import org.alivepdf.fonts.Style;
			import org.alivepdf.images.ColorSpace;
			import org.alivepdf.layout.Align;
			import org.alivepdf.layout.Orientation;
			import org.alivepdf.layout.Size;
			import org.alivepdf.layout.Unit;
			import org.alivepdf.pages.Page;
			import org.alivepdf.pdf.PDF;
			import org.alivepdf.saving.Download;
			import org.alivepdf.saving.Method;
			
			protected var claimPDF:PDF;

			[Bindable]
			public var model : ModelLocator = ModelLocator.getInstance();
			
			[Bindable]
			public var expAnnoArray : ArrayCollection = new ArrayCollection;

			[Bindable]
			public var estadoArray : ArrayCollection = new ArrayCollection;

			public var Anno :int;
			
			public function init() : void
			{
				var i : int;
				var today:Date= new Date();
				// datos para combos A単os				
				expAnnoArray.addItem('Todos');
				this.Anno = today.getFullYear();
				for (i = this.Anno + 1; i > 2000; i--) {
					expAnnoArray.addItem( i.toString() );
				}
				cmbExpAnno.selectedIndex = 2;
				// datos para combo Estado
				estadoArray.addItem('Todos');
				estadoArray.addItem('Adeudados');
				estadoArray.addItem('Pagados');
				cmbEstado.selectedIndex = 0;
			}	
				
			public function reporteReportePagosAgentesSearch() : void
			{
				var reportePagosAgentesVO : ReportePagosAgentesVO = new ReportePagosAgentesVO();
				reportePagosAgentesVO.expAnno = cmbExpAnno.selectedItem;
				reportePagosAgentesVO.estadoId = cmbEstado.selectedIndex;
				reportePagosAgentesVO.agenteNombre = txtOperador.text;

				model.reportePagosAgentes.reportePagosAgentesVO = reportePagosAgentesVO;
				var event : ReportePagosAgentesEvent = new ReportePagosAgentesEvent( reportePagosAgentesVO );
				CairngormEventDispatcher.getInstance().dispatchEvent( event );
			}
			
			private function exportCSV(dg:DataGrid):void
			{
				var arrayTotals : Array = new Array();
				arrayTotals.push("");
				DataExporter.exportGridAndTotalsCSV(dg, arrayTotals);
			}	
			
			// Crea la Factura en PDF
			protected function savePDF():void
			{
				claimPDF = new PDF(Orientation.PORTRAIT, Unit.MM, Size.LETTER);
				claimPDF.setDisplayMode (Display.FULL_WIDTH); 
				claimPDF.addPage();
				
				/* ****  HEADER  **** */
				// logo image
				//				claimPDF.addImageStream( new jpgBytes() as ByteArray, ColorSpace.DEVICE_RGB, null,10,10 );
				
				claimPDF.setFont(new CoreFont( FontFamily.ARIAL ), 10);
				claimPDF.addText("Pagos a Agentes",100,10);
				
				/* ****  BODY  **** */
				
				var acAllNodes:ArrayCollection;
				
				
				//private function convertXmlListToArrayCollection():void
				// convert XML to ArrayCollection
				var strXML:String = datagrid.dataProvider.toArray().toString();
				strXML = "<root>" + strXML + "</root>";
				var xml:XML = new XML(strXML);
				var xmlDoc:XMLDocument = new XMLDocument(xml);
				var decoder:SimpleXMLDecoder = new SimpleXMLDecoder(true);
				var resultObj:Object = decoder.decodeXML(xmlDoc);
				acAllNodes = new ArrayCollection();
				acAllNodes = resultObj.root.row;
				// format numbers
				var i : int;
				var numberFormatter:NumberFormatter = new NumberFormatter();
				numberFormatter.precision = 2;
				numberFormatter.useThousandsSeparator="true"
				numberFormatter.rounding = NumberBaseRoundType.NEAREST;
				for (i = 0; i < acAllNodes.length; i++) {
					acAllNodes[i].Total = numberFormatter.format(acAllNodes[i].Total);
					acAllNodes[i].TipoCambio = numberFormatter.format(acAllNodes[i].TipoCambio);
					acAllNodes[i].Costo = numberFormatter.format(acAllNodes[i].Costo);
					acAllNodes[i].Utilidad = numberFormatter.format(acAllNodes[i].Utilidad);
				}
				
				// create columns to specify the column order
				var gridColumnExpAnno:org.alivepdf.data.GridColumn = new org.alivepdf.data.GridColumn("A単o", "ExpAnno", 9, Align.CENTER, Align.CENTER);
				var gridColumnExpNum:org.alivepdf.data.GridColumn = new org.alivepdf.data.GridColumn("Num", "ExpNum", 10, Align.CENTER, Align.CENTER);
				var gridColumnAgente:org.alivepdf.data.GridColumn = new org.alivepdf.data.GridColumn("Agente", "AgntNombre", 50, Align.CENTER, Align.LEFT);
				var gridColumnPax:org.alivepdf.data.GridColumn = new org.alivepdf.data.GridColumn("Nombre Pax", "PaxNombre", 55, Align.CENTER, Align.LEFT);
				var gridColumnCosto:org.alivepdf.data.GridColumn = new org.alivepdf.data.GridColumn("Costo $", "Costo", 16, Align.CENTER, Align.RIGHT);
				var gridColumnCostoColones:org.alivepdf.data.GridColumn = new org.alivepdf.data.GridColumn("Costo c/.", "CostoColones", 20, Align.CENTER, Align.RIGHT);
				var gridColumnChequeNum:org.alivepdf.data.GridColumn = new org.alivepdf.data.GridColumn("Cheque #", "ChequeNum", 25, Align.CENTER, Align.LEFT);
				var gridColumnTipoCambio:org.alivepdf.data.GridColumn = new org.alivepdf.data.GridColumn("T.C.", "TipoCambio", 12, Align.CENTER, Align.RIGHT);
				
				// create a columns Array
				// it determines the order shown in the PDF
				var columns:Array = new Array ( gridColumnAgente, gridColumnPax, gridColumnExpAnno, gridColumnExpNum,  gridColumnCosto, gridColumnCostoColones,
					gridColumnChequeNum, gridColumnTipoCambio);
				
				// create a Grid object as usual
				//var grid:Grid = new Grid( acAllNodes.toArray(), 200, 120, new RGBColor ( 0xCCCCCC ), new RGBColor (0xCCCCCC), true, new RGBColor(0x887711), .1, null, columns );
				var grid:Grid = new Grid( acAllNodes.toArray(), 5, 0, new RGBColor ( 0x000000 ), new RGBColor (0x000000), false, new RGBColor(0x999999), 0.1, null, columns );
				claimPDF.setFont(new CoreFont( FontFamily.ARIAL ), 8);
				claimPDF.textStyle( new RGBColor(0x000000), 1 );
				claimPDF.addGrid( grid, 0, 5 );
				
				/* ****  FOOTER  **** */
				
				// HERE IS HOW TO SAVE FROM FLASH PLAYER 10 OR GREATER. THIS IS USED FOR THIS SAMPLE.
				var bytes:ByteArray = claimPDF.save(Method.LOCAL);
				var f:FileReference = new FileReference();
				f.save(bytes,"PagosAgentes_" + model.reportePagosAgentes.reportePagosAgentesVO.expAnno + ".pdf");
			}
			
		]]>
	</fx:Script>
	
	<s:Label x="11" y="10" text="Exp. A単o"/>
	<s:Label x="200.25" y="8.95" text="Operador"/>
	<s:DropDownList id="cmbExpAnno" x="11" y="22" width="71"
				alternatingItemColors="[#F7F7F7, white]"
				dataProvider="{expAnnoArray}"/>
	<s:Label x="91" y="10" text="Estado"/>
	<s:DropDownList id="cmbEstado" x="91" y="22" width="102"
					alternatingItemColors="[#F7F7F7, white]"
					labelField="Nombre"
					dataProvider="{estadoArray}"/>
	<s:TextInput id="txtOperador" x="200.6" y="21.65" width="242"
				 typographicCase="uppercase"/>
 
	<s:Button x="545" y="20" label="Buscar"
			  click="reporteReportePagosAgentesSearch()"/>
	<s:Button x="841" y="20" label="PDF"
			  enabled="{datagrid.dataProvider != null}" click="savePDF()"/>
	<s:Button x="928" y="20" label="Exportar"
			  enabled="{datagrid.dataProvider != null}" click="exportCSV(datagrid)"/>
	
	<s:DataGrid id="datagrid" x="10" y="50.35" width="992" height="517"
				 verticalScrollPolicy="on"
				 sortableColumns="false" 
				 alternatingRowColors="[#F7F7F7, white]"
				 dataProvider="{model.reportePagosAgentes.reportePagosAgentesVO.datagridInfo}">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn headerText="Agente" minWidth="250"
								   dataField="AgntNombre"/>
				<s:GridColumn headerText="Pax Nombre" minWidth="250"
								   dataField="PaxNombre"/>
				<s:GridColumn headerText="A単o" minWidth="45"
							  itemRenderer="com.adobe.cairngorm.project.components.DatagridAlignCenter"
								   dataField="ExpAnno"/>
				<s:GridColumn headerText="Num" minWidth="55"
							  itemRenderer="com.adobe.cairngorm.project.components.DatagridAlignCenter"
								   dataField="ExpNum"/>
				<s:GridColumn headerText="Costo $" minWidth="75"
							  itemRenderer="com.adobe.cairngorm.project.components.DatagridAlignRight"
								   dataField="Costo"/>
				<s:GridColumn headerText="Costo c/." minWidth="100"
							  itemRenderer="com.adobe.cairngorm.project.components.DatagridAlignRight"
								   dataField="CostoColones"/>
				<s:GridColumn headerText="Cheque #" minWidth="110"
								   dataField="ChequeNum"/>
				<s:GridColumn headerText="Tipo Cambio" minWidth="80"
							  itemRenderer="com.adobe.cairngorm.project.components.DatagridAlignRight"
								   dataField="TipoCambio"/>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	
</s:Panel>
