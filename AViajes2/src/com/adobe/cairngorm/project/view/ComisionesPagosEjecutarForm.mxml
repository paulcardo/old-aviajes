<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 title="Comisiones - Ejecutar"
		 creationComplete="init()"
		 width="1014" height="610">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

	<fx:Script>
		<![CDATA[  
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import com.adobe.cairngorm.project.event.ComisionesPagosEvent;
			import com.adobe.cairngorm.project.event.ComisionesPagosUpdateEvent;
			import com.adobe.cairngorm.project.event.ComisionistasNombreEvent;
			import com.adobe.cairngorm.project.event.CounterEvent;
			import com.adobe.cairngorm.project.model.ComisionesPagos;
			import com.adobe.cairngorm.project.model.ModelLocator;
			import com.adobe.cairngorm.project.utils.DataExporter;
			import com.adobe.cairngorm.project.vo.*;
			
			import mx.collections.ArrayCollection;
			import mx.utils.ObjectUtil;
			
			[Bindable]
			public var model : ModelLocator = ModelLocator.getInstance();
			
			[Bindable]
			public var estadoArray : ArrayCollection = new ArrayCollection;
			[Bindable]
			public var estadoUpdateArray : ArrayCollection = new ArrayCollection;
			
			[Bindable]
			public var expAnnoDetalleArray : ArrayCollection = new ArrayCollection;

			public var comisionesPagosId :int;
			
			public function init() : void
			{
				estadoArray.addItem('Todos');
				estadoArray.addItem('Borrado');
				estadoArray.addItem('Pagado');
				estadoArray.addItem('Pendiente');
				cmbEstado.selectedIndex = 0;
				//
				estadoUpdateArray.addItem('Borrado');
				estadoUpdateArray.addItem('Pagado');
				estadoUpdateArray.addItem('Pendiente');
			}	
				
			public function comisionesPagosSearch() : void
			{
				var comisionesPagosVO : ComisionesPagosVO = new ComisionesPagosVO();
				comisionesPagosVO.estado = cmbEstado.selectedItem;
				model.comisionesPagos.comisionesPagosVO = comisionesPagosVO;
				var event : ComisionesPagosEvent = new ComisionesPagosEvent( comisionesPagosVO );
				CairngormEventDispatcher.getInstance().dispatchEvent( event );
			}
			
			private function selectComisionPago():void
			{
				if ( datagrid.selectedIndex > -1 ){
					comisionesPagosId = datagrid.selectedItem.ComisionesPagosId; // Id
					lblNombre.text = datagrid.selectedItem.Nombre;
					lblCuenta.text = datagrid.selectedItem.Cuenta;
					lblExpAnno.text = datagrid.selectedItem.ExpAnno;
					lblExpNum.text = datagrid.selectedItem.ExpNum;
					lblCosto.text = datagrid.selectedItem.Costo;
					lblFechaLimite.text = datagrid.selectedItem.FechaLimite;
					lblConcepto.text = datagrid.selectedItem.Concepto;
					txtObservaciones.text = datagrid.selectedItem.Observaciones;
					// assign Estado
					var i : int;
					for (i = 0; i < cmbEstadoUpdate.dataProvider.length; i++) {
						if ( cmbEstadoUpdate.dataProvider[i] == datagrid.selectedItem.Estado ){
							cmbEstadoUpdate.selectedIndex = i;
							break;
						}
					}
				}
			}
			
			private function updateComisionPago():void
			{
				var comisionesPagosDetalleVO : ComisionesPagosDetalleVO = new ComisionesPagosDetalleVO();
				comisionesPagosDetalleVO.comisionesPagosId = comisionesPagosId;
				comisionesPagosDetalleVO.estado = cmbEstadoUpdate.selectedItem;
				comisionesPagosDetalleVO.observaciones = txtObservaciones.text.toUpperCase();
				model.comisionesPagosUpdate.comisionesPagosUpdateVO = comisionesPagosDetalleVO;
				var event : ComisionesPagosUpdateEvent = new ComisionesPagosUpdateEvent( comisionesPagosDetalleVO );
				CairngormEventDispatcher.getInstance().dispatchEvent( event );

			}
			
			private function exportCSV(dg:DataGrid):void
			{
				var arrayTotals : Array = new Array();
				arrayTotals.push("");
				DataExporter.exportGridAndTotalsCSV(dg, arrayTotals);
			}
			
			// Sorts for the numeric columns
			private function sortCompareNumericExpNum(itemA:Object, itemB:Object, gc:GridColumn):int
			{
				return ObjectUtil.numericCompare(itemA.ExpNum,itemB.ExpNum);
			}
			
			private function sortCompareNumericCosto(itemA:Object, itemB:Object, gc:GridColumn):int
			{
				return ObjectUtil.numericCompare(itemA.Costo,itemB.Costo);
			}
			
		]]>
	</fx:Script>
	<s:Label x="9.65" y="10.30" text="Estado"/>
	<s:DropDownList id="cmbEstado" x="11" y="21" width="105"
					alternatingItemColors="[#F7F7F7, white]"
					dataProvider="{estadoArray}"/>
	<s:Button x="123" y="21" label="Buscar"
			  click="comisionesPagosSearch()"/>
	<s:Button x="931" y="20" label="Exportar"
			  enabled="{datagrid.dataProvider != null}" click="exportCSV(datagrid)"/>
	
	<s:DataGrid id="datagrid" x="10" y="50.35" width="992" height="376"
				 verticalScrollPolicy="on" 
				 variableRowHeight="true"
				 alternatingRowColors="[#F7F7F7, white]"
				 selectionChange="selectComisionPago()"
				 dataProvider="{model.comisionesPagos.comisionesPagosVO.datagridInfo}">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn headerText="Año" minWidth="44"
							  itemRenderer="com.adobe.cairngorm.project.components.DatagridAlignCenter"
								   dataField="ExpAnno"/>
				<s:GridColumn headerText="Num" minWidth="40"
								   sortCompareFunction="sortCompareNumericExpNum"
								   itemRenderer="com.adobe.cairngorm.project.components.DatagridAlignCenter"
								   dataField="ExpNum"/>
				<s:GridColumn headerText="Nombre" minWidth="125"
								   dataField="Nombre"/>
				<s:GridColumn headerText="Cuenta" minWidth="125"
								   dataField="Cuenta"/>
				<s:GridColumn headerText="Costo" minWidth="85"
								   sortCompareFunction="sortCompareNumericCosto"
								   itemRenderer="com.adobe.cairngorm.project.components.DatagridAlignRight"
								   dataField="CostoFormated"/>
				<s:GridColumn headerText="Fecha Límite" minWidth="88"
								   dataField="FechaLimite"/>
				<s:GridColumn headerText="Concepto" minWidth="192"
								   dataField="Concepto"/>
				<s:GridColumn headerText="Estado" minWidth="72"
								   dataField="Estado"/>
				<s:GridColumn headerText="Observaciones" minWidth="192"
								   dataField="Observaciones"/>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>


	<s:Label x="12" y="434" text="Nombre"/>
	<s:Label id="lblNombre" x="12" y="454" width="450"/>

	<s:Label x="467.7" y="435.3" text="Cuenta"/>
	<s:Label id="lblCuenta" x="468" y="454" width="427"/>

	<s:Label x="153.6" y="484.25" text="Costo"/>
	<s:Label id="lblCosto" x="154" y="500" width="102"/>
	
	<s:Label x="39.6" y="531.25" text="Concepto :"/>
	
	<s:Label id="lblConcepto" x="110" y="531" width="853"/>
	<s:Label x="277.7" y="484.3" text="Fecha Límite"/>
	<s:Label id="lblFechaLimite" x="278" y="500" width="100"/>
	<s:Label x="397.7" y="484.3" text="Estado"/>
	<s:DropDownList id="cmbEstadoUpdate" x="398" y="495" width="125"
					typographicCase="uppercase"
					alternatingItemColors="[#F7F7F7, white]"
					dataProvider="{estadoUpdateArray}"/>
	<s:Label x="10.6" y="559.25" text="Observaciones :"/>
	<s:TextInput id="txtObservaciones" x="110" y="550" width="854"
				 typographicCase="uppercase"/>
	
	<s:Button id="btnGuardar" x="909" y="438" width="90" label="Guardar" 
			  click="updateComisionPago()"/>
	<s:Button id="btnCancelar" x="909" y="468" width="90" label="Cancelar" 
			  click="selectComisionPago()"/>
	
	<s:Label x="10" y="484" text="Año"/>
	<s:Label id="lblExpAnno" x="10" y="500" width="66"/>
	<s:Label x="86.7" y="484" text="Exp. #"/>
	<s:Label id="lblExpNum" x="87" y="500" width="46"/>
	
</s:Panel>
